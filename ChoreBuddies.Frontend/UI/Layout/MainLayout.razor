@inherits LayoutComponentBase

@using ChoreBuddies.Frontend.Features.Authentication
@using ChoreBuddies.Frontend.UI.Components
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthApiService authApiService

<MudThemeProvider Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <!-- Layout for authenticated users -->
        <MudLayout>
            <MudAppBar Elevation="1" Color="Color.Transparent" Fixed="true">
                <AppTitleLogo />
                <MudSpacer />

                <!-- Top Navigation Items -->
                <div class="d-none d-md-block">
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/dashboard"))">Dashboard</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/tasks"))">Tasks</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/rewards"))">Rewards</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/chat"))">Chat</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/settings"))">Settings</MudButton>
                </div>

                <MudIconButton Icon="@Icons.Material.Filled.Notifications" Class="black-icon" />
                <MudMenu Icon="@Icons.Material.Filled.AccountCircle" AnchorOrigin="Origin.BottomRight" Class="black-icon">
                    <MudMenuItem OnClick="@(() => Navigation.NavigateTo("/profile"))">Profile</MudMenuItem>
                    <MudMenuItem OnClick="@(() => Navigation.NavigateTo("/settings"))">Settings</MudMenuItem>
                    <MudDivider Style="border-color: black"/>
                    <MudMenuItem OnClick="@Logout">Logout</MudMenuItem>
                </MudMenu>
                <div class="d-block d-md-none">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="@ToggleDrawer" />
                </div>
            </MudAppBar>

            <!-- Drawer for mobile navigation -->
            <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.Right" Elevation="2" Variant="@DrawerVariant.Temporary">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">@AppTitle</MudText>
                </MudDrawerHeader>
                <MudNavMenu>
                    <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                    <MudNavLink Href="/tasks" Icon="@Icons.Material.Filled.Task">Tasks</MudNavLink>
                    <MudNavLink Href="/rewards" Icon="@Icons.Material.Filled.Star">Rewards</MudNavLink>
                    <MudNavLink Href="/chat" Icon="@Icons.Material.Filled.Chat">Chat</MudNavLink>
                    <MudNavLink Href="/settings" Icon="@Icons.Material.Filled.Settings">Settings</MudNavLink>
                </MudNavMenu>
            </MudDrawer>

            <!-- Desktop Sidebar -->
            <div class="d-block d-md-none">
                <!-- Mobile view - no permanent sidebar -->
                <MudMainContent>
                    <MudContainer MaxWidth="MaxWidth.Large" Class="py-6">
                        @Body
                    </MudContainer>
                </MudMainContent>
            </div>

            <div Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <!-- Desktop view with sidebar -->
                <MudMainContent>
                    <div class="d-none d-md-block main-container">
                        <div class="fixed">
                            <div class="d-flex flex-column" style="height: 100%;">
                                <!-- Quick Actions Section -->
                                <div class="pa-4">
                                    <MudText Typo="Typo.subtitle2" Class="mb-3">Quick Actions</MudText>
                                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                                               Color="Color.Primary"
                                               Variant="Variant.Filled"
                                               FullWidth="true"
                                               Class="mb-2"
                                               OnClick="@AddNewTask">
                                        Add New Task
                                    </MudButton>
                                    <MudButton StartIcon="@Icons.Material.Filled.List"
                                               Color="Color.Default"
                                               Variant="Variant.Outlined"
                                               FullWidth="true"
                                               Class="mb-2"
                                               OnClick="@ViewAllTasks">
                                        View All Tasks
                                    </MudButton>
                                    <MudButton StartIcon="@Icons.Material.Filled.CardGiftcard"
                                               Color="Color.Default"
                                               Variant="Variant.Outlined"
                                               FullWidth="true"
                                               OnClick="@RedeemRewards">
                                        Redeem Rewards
                                    </MudButton>
                                </div>

                                <MudDivider Style="border-color: #FFFFFF; color: #FFFFFF" />

                                <!-- Recent Chat Section -->
                                <div class="pa-4 flex-grow-1">
                                    <MudText Typo="Typo.subtitle2" Class="mb-3">Recent Chat</MudText>
                                    <div class="chat-messages">
                                        @if (_recentChats.Any())
                                        {
                                            @foreach (var chat in _recentChats)
                                            {
                                                <MudPaper Class="pa-2 mb-2" Elevation="0">
                                                    <div class="d-flex align-center mb-1">
                                                        <MudAvatar Size="Size.Small" Class="mr-2">@chat.SenderInitial</MudAvatar>
                                                        <MudText Typo="Typo.caption">@chat.Sender</MudText>
                                                    </div>
                                                    <MudText Typo="Typo.body2">@chat.Message</MudText>
                                                </MudPaper>
                                            }
                                            <div class="mt-3 d-flex align-center">
                                                <MudTextField T="string" @bind-Value="_chatMessage"
                                                              Placeholder="Type a message..."
                                                              Variant="Variant.Outlined"
                                                              Margin="Margin.Dense"
                                                              Adornment="Adornment.End"
                                                              AdornmentIcon="@Icons.Material.Filled.Send"
                                                              OnAdornmentClick="@SendMessage" />
                                            </div>
                                        }
                                        else
                                        {
                                            <MudText Typo="Typo.caption" Color="Color.Tertiary">No recent messages</MudText>
                                        }
                                    </div>
                                    </div>
                            </div>
                        </div>
                        <div class="flex">
                            <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-6">
                                @Body
                            </MudContainer>
                        </div>
                    </div>
                </MudMainContent>
            </div>
        </MudLayout>
    </Authorized>

    <NotAuthorized>
        <!-- Layout for non-authenticated users -->
        <MudLayout>
            <MudAppBar Elevation="0" Color="Color.Transparent">
                <AppTitleLogo />
                <MudSpacer />
                <div class="d-none d-md-block">
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo(" /features"))">Features</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/pricing"))">Pricing</MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/support"))">Support</MudButton>
                    <MudButton Class="rounded-lg" Variant="Variant.Filled" Size="Size.Large"
                               OnClick="@(() => Navigation.NavigateTo("/login"))"
                               Style="background-color: #5B6FE6; color: white; text-transform: none; margin-left: 10px;">
                        Login
                    </MudButton>
                    <MudButton Class="app-bar" OnClick="@(() => Navigation.NavigateTo("/signup"))">Sign Up</MudButton>
                </div>
                <div class="d-block d-md-none">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="@ToggleDrawer" />
                </div>
            </MudAppBar>

            <!-- Mobile drawer for non-authenticated users -->
            <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.Right" Elevation="2" Variant="@DrawerVariant.Temporary">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h6">@AppTitle</MudText>
                </MudDrawerHeader>
                <MudNavMenu>
                    <MudNavLink Href="/features">Features</MudNavLink>
                    <MudNavLink Href="/pricing">Pricing</MudNavLink>
                    <MudNavLink Href="/support">Support</MudNavLink>
                    <MudNavLink Href="/login">Login</MudNavLink>
                    <MudNavLink Href="/signup">Sign Up</MudNavLink>
                </MudNavMenu>
            </MudDrawer>

            <MudMainContent>
                @Body
            </MudMainContent>
        </MudLayout>
    </NotAuthorized>
</AuthorizeView>

@code {
    private const string AppTitle = "ChoreBuddies"; // TODO make strings file

    private bool _drawerOpen = false;
    private string _chatMessage = "";
    private List<ChatMessage> _recentChats = new();

    private MudTheme _theme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#5B6FE6",
            Secondary = "#424242",
            Background = "#FFFFFF",
            Surface = "#FFFFFF",
            AppbarBackground = "#FFFFFF",
            DrawerBackground = "#FFFFFF",
            DrawerText = "rgba(0,0,0, 0.87)",
            DrawerIcon = "rgba(0,0,0, 0.54)"
        },
        Typography = new Typography()
        {
            Default = new DefaultTypography()
            {
                FontFamily = new[] { "Inter", "-apple-system", "BlinkMacSystemFont", "Segoe UI", "Roboto", "sans-serif" }
            }
        }
    };

    protected override void OnInitialized()
    {
        // Initialize with sample data - replace with real data from your service
        _recentChats = new List<ChatMessage>
        {
            new ChatMessage
            {
                Sender = "Mom",
                SenderInitial = "M",
                Message = "Hey everyone, remember to update your task progress by tonight!"
            },
            new ChatMessage
            {
                Sender = "Sarah",
                SenderInitial = "S",
                Message = "Got it, Mom! Will do."
            }
        };
    }

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void AddNewTask()
    {
        Navigation.NavigateTo("/tasks/new");
    }

    private void ViewAllTasks()
    {
        Navigation.NavigateTo("/tasks");
    }

    private void RedeemRewards()
    {
        Navigation.NavigateTo("/rewards/redeem");
    }

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(_chatMessage))
        {
            // Add logic to send message
            _chatMessage = "";
        }
    }

    private async void Logout()
    {
        await authApiService.RevokeAsync();
        Navigation.NavigateTo("/");
    }

    private class ChatMessage
    {
        public string Sender { get; set; } = "";
        public string SenderInitial { get; set; } = "";
        public string Message { get; set; } = "";
    }
}

<style>
    .app-bar {
        color: #000;
        padding: 20px;
    }

    .black-icon .mud-icon-root {
        color: black;
    }


    .main-container {
        display: flex;
        flex-direction: row;
        width: 100vw;
        height: 100vh;
        overflow: hidden;
    }

    .fixed {
        width: 240px;
        height: 100%;
        flex: 0 0 240px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .flex {
        flex: 1 1 auto;
        overflow-y: auto;
        max-width: calc(100vw - 240px);
        margin-left: 240px;
    }
</style>